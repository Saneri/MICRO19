;**************************************************************************
; AUTORES: PABLO ROSALES Y SANTERI SUITIALA
; PAREJA 9  
;*************************************************************************

DATOS SEGMENT 
	MATRIZ		DB		'0', '7', '3', '4', '1', '6', '7', '8', '9' 
	MATRIZ2		DB		0, 7, 3, 4, 1, 6, 7, 8, 9, '$'
	NOMBRE		DB		"MATRIZ",'$'
	RESULTADO	DB		'1','1','7'
	PREG_MAT1	DB		"ESCRIBE MATRIX 1: $"
	PREG_MAT2	DB		"ESCRIBE MATRIX 2: $"
	PREG_MAT3	DB		"ESCRIBE MATRIX 3: $"
	PREG_MAT4	DB		"ESCRIBE MATRIX 4: $"
	PREG_MAT5	DB		"ESCRIBE MATRIX 5: $"
	PREG_MAT6	DB		"ESCRIBE MATRIX 6: $"
	PREG_MAT7	DB		"ESCRIBE MATRIX 7: $"
	PREG_MAT8	DB		"ESCRIBE MATRIX 8: $"
	PREG_MAT9	DB		"ESCRIBE MATRIX 9: $"
	CLR_PANT 	DB 		1BH,"[2","J$"
	MAT1		DB		10 DUP (?)
	MAT2		DB		10 DUP (?)
	MAT3		DB		10 DUP (?)
	MAT4		DB		10 DUP (?)
	MAT5		DB		10 DUP (?)
	MAT6		DB		10 DUP (?)
	MAT7		DB		10 DUP (?)
	MAT8		DB		10 DUP (?)
	MAT9		DB		10 DUP (?)
	NUMERO		DW		0

DATOS ENDS 

PILA SEGMENT STACK "STACK" 
	DB 10H DUP (0)
PILA ENDS 

CODE SEGMENT 
ASSUME CS: CODE, DS: DATOS, SS: PILA 

INICIO PROC NEAR

	MOV AX, DATOS 
	MOV DS, AX 
	MOV AX, PILA 
	MOV SS, AX 
	MOV SP, 64 
	; COMIENZO DEL PROGRAMA 
	
	CALL PREGUNTAMATRIZ ; pregunta los 9 numeros

	CALL STRCONVERSION ; convertir los numeros preguntados y mover a matriz

	CALL CALCULAR

	;PRIMERA LINEA
	MOV AH, 2
	CALL TAB
	CALL BARRA 
	MOV DL, MATRIZ[0]
	INT 21H
	CALL ESPACIO
	MOV DL, MATRIZ[1]
	INT 21H
	CALL ESPACIO
	MOV DL, MATRIZ[2]
	INT 21H
	CALL BARRA
	CALL SALTO 
	
	;SEGUNDA LINEA
	MOV DX, OFFSET NOMBRE
	MOV AH, 9
	INT 21H
	MOV AH, 2
	CALL IGUAL
	CALL TAB
	CALL BARRA 
	MOV DL, MATRIZ[3]
	INT 21H	
	CALL ESPACIO
	MOV DL, MATRIZ[4]
	INT 21H
	CALL ESPACIO
	MOV DL, MATRIZ[5]
	INT 21H
	CALL BARRA
	CALL ESPACIO 
	CALL IGUAL 
	CALL ESPACIO
	MOV DL, RESULTADO ; COMPROBAR IMPRIMIR 1 POR 1
	INT 21H
	CALL SALTO
	
	;TERCERA LINEA
	CALL TAB
	MOV AH, 2
	CALL BARRA 
	MOV DL, MATRIZ[6]
	INT 21H
	CALL ESPACIO
	MOV DL, MATRIZ[7]
	INT 21H
	CALL ESPACIO
	MOV DL, MATRIZ[8]
	INT 21H
	CALL BARRA
	CALL SALTO
	
	; FIN DEL PROGRAMA 
	MOV AX, 4C00H 
	INT 21H 
 

PREGUNTAMATRIZ PROC NEAR ; PREGUNTA A CADA UNO DE LAS CELDAS DE MATRIZ

	CALL CLEARPANT
	MOV AH, 09H
	MOV DX, OFFSET PREG_MAT1
	INT 21H

	MOV AH, 0AH
	MOV DX, OFFSET MAT1
	MOV MAT1[0], 10
	INT 21H

	CALL CLEARPANT
	MOV AH, 09H
	MOV DX, OFFSET PREG_MAT2
	INT 21H

	MOV AH, 0AH
	MOV DX, OFFSET MAT2
	MOV MAT2[0], 10
	INT 21H

	CALL CLEARPANT
	MOV AH, 09H
	MOV DX, OFFSET PREG_MAT3
	INT 21H

	MOV AH, 0AH
	MOV DX, OFFSET MAT3
	MOV MAT3[0], 10
	INT 21H

;	CALL CLEARPANT
;	MOV AH, 09H
;	MOV DX, OFFSET PREG_MAT4
;	INT 21H

;	MOV AH, 0AH
;	MOV DX, OFFSET MAT4
;	MOV MAT4[0], 10
;	INT 21H

;	CALL CLEARPANT
;	MOV AH, 09H
;	MOV DX, OFFSET PREG_MAT5
;	INT 21H

;	MOV AH, 0AH
;	MOV DX, OFFSET MAT5
;	MOV MAT5[0], 10
;	INT 21H

;	CALL CLEARPANT
;	MOV AH, 09H
;	MOV DX, OFFSET PREG_MAT6
;	INT 21H

;	MOV AH, 0AH
;	MOV DX, OFFSET MAT6
;	MOV MAT6[0], 10
;	INT 21H
	
;	CALL CLEARPANT
;	MOV AH, 09H
;	MOV DX, OFFSET PREG_MAT7
;	INT 21H

;	MOV AH, 0AH
;	MOV DX, OFFSET MAT7
;	MOV MAT7[0], 10
;	INT 21H
	
;	CALL CLEARPANT
;	MOV AH, 09H
;	MOV DX, OFFSET PREG_MAT8
;	INT 21H

;	MOV AH, 0AH
;	MOV DX, OFFSET MAT8
;	MOV MAT8[0], 10
;	INT 21H
	
;	CALL CLEARPANT
;	MOV AH, 09H
;	MOV DX, OFFSET PREG_MAT9
;	INT 21H

;	MOV AH, 0AH
;	MOV DX, OFFSET MAT9
;	MOV MAT9[0], 10
;	INT 21H
	
	RET
PREGUNTAMATRIZ ENDP

STRCONVERSION PROC NEAR
	MOV BX, 0

ITERSTR1:		; CONVERTIR UN CARACTER
	MOV DL, MAT1[BX+2]
	SUB DL, 30H 	; CONVERCION: STRING -> INT
	PUSH DX		; METE CARACTER CONVERTIDO A PILA
	INC BX
	CMP BL, MAT1[1]
	JNE ITERSTR1
	CALL STR2INT
	MOV MATRIZ2[0], DL

;ITERSTR2:		; CONVERTIR UN CARACTER
;	MOV DL, MAT2[BX+2]
;	SUB DL, 30H 	; CONVERCION: STRING -> INT
;	PUSH DX		; METE CARACTER CONVERTIDO A PILA
;	INC BX
;	CMP BL, MAT2[1]
;	JNE ITERSTR2
;	CALL STR2INT
;	MOV MATRIZ2[1], DL

;ITERSTR3:		; CONVERTIR UN CARACTER
;	MOV DL, MAT3[BX+2]
;	SUB DL, 30H 	; CONVERCION: STRING -> INT
;	PUSH DX		; METE CARACTER CONVERTIDO A PILA
;	INC BX
;	CMP BL, MAT3[1]
;	JNE ITERSTR3
;	CALL STR2INT
;	MOV MATRIZ2[2], DL

;ITERSTR4:		; CONVERTIR UN CARACTER
;	MOV DL, MAT4[BX+2]
;	SUB DL, 30H 	; CONVERCION: STRING -> INT
;	PUSH DX		; METE CARACTER CONVERTIDO A PILA
;	INC BX
;	CMP BL, MAT4[1]
;	JNE ITERSTR4
;	CALL STR2INT
;	MOV MATRIZ2[3], DL

;ITERSTR5:		; CONVERTIR UN CARACTER
;	MOV DL, MAT5[BX+2]
;	SUB DL, 30H 	; CONVERCION: STRING -> INT
;	PUSH DX		; METE CARACTER CONVERTIDO A PILA
;	INC BX
;	CMP BL, MAT5[1]
;	JNE ITERSTR5
;	CALL STR2INT
;	MOV MATRIZ2[4], DL

;ITERSTR6:		; CONVERTIR UN CARACTER
;	MOV DL, MAT6[BX+2]
;	SUB DL, 30H 	; CONVERCION: STRING -> INT
;	PUSH DX		; METE CARACTER CONVERTIDO A PILA
;	INC BX
;	CMP BL, MAT6[1]
;	JNE ITERSTR6
;	CALL STR2INT
;	MOV MATRIZ2[5], DL

;ITERSTR7:		; CONVERTIR UN CARACTER
;	MOV DL, MAT7[BX+2]
;	SUB DL, 30H 	; CONVERCION: STRING -> INT
;	PUSH DX		; METE CARACTER CONVERTIDO A PILA
;	INC BX
;	CMP BL, MAT7[1]
;	JNE ITERSTR7
;	CALL STR2INT
;	MOV MATRIZ[6], DL

;ITERSTR8:		; CONVERTIR UN CARACTER
;	MOV DL, MAT8[BX+2]
;	SUB DL, 30H 	; CONVERCION: STRING -> INT
;	PUSH DX		; METE CARACTER CONVERTIDO A PILA
;	INC BX
;	CMP BL, MAT8[1]
;	JNE ITERSTR8
;	CALL STR2INT
;	MOV MATRIZ[7], DL

;ITERSTR9:		; CONVERTIR UN CARACTER
;	MOV DL, MAT9[BX+2]
;	SUB DL, 30H 	; CONVERCION: STRING -> INT
;	PUSH DX		; METE CARACTER CONVERTIDO A PILA
;	INC BX
;	CMP BL, MAT9[1]
;	JNE ITERSTR9
;	CALL STR2INT
;	MOV MATRIZ[8], DL

	RET
STRCONVERSION ENDP

STR2INT PROC NEAR	
	; METE EL NUMERO DESDE LA PILA A MATRIZ
	MOV NUMERO, 0
	MOV CX, 1	
ITERINT:
	POP DX

	MOV AX, CX
	MUL DX		; DX * 10^N
	MOV DX, AX
	PUSH DX
	MOV AX, 10
	MUL CX	 	; CX * 10
	MOV CX, AX 	; ESTE LINEA BORRA DX POR ALGUN RAZON
	POP DX	
	ADD NUMERO, DX

	DEC BL
	CMP BL, 0
	JNE ITERINT

	; PREPARA A QUE SE MUEVE DX A MATRIZ
	MOV DX, NUMERO
	
	RET
STR2INT ENDP

CLEARPANT PROC NEAR ; BORRAR LA PANTALLA
	MOV AH, 09H
	MOV DX, OFFSET CLR_PANT
	INT 21H
	RET
CLEARPANT ENDP

TAB PROC NEAR ; FUNCION QUE ESCRIBE UN TABULADO HORIZONTAL POR PANTALLA 
	MOV DL, 9H 
	INT 21H
	RET 
TAB ENDP 

BARRA PROC NEAR ;FUNCION PARA ESCRIBIR UNA BARRA LATERAL POR PANTALLA "|"
	MOV DL, 7CH
	INT 21H
	RET
BARRA ENDP

ESPACIO PROC NEAR ;FUNCION PARA ESCRIBIR UN ESPACIO POR PANTALLA
	MOV DL, 20H
	INT 21H
	RET
ESPACIO ENDP

IGUAL PROC NEAR ;FUNCION PARA ESCRIBIR POR PANTALLA EL SIMBOLO IGUAL "=" 
	MOV DL, 3DH
	INT 21H
	RET
IGUAL ENDP

SALTO PROC NEAR ; FUNCION PARA ESCIBIR UN SALTO DE LINEA POR PANTALLA
	MOV DL, 0AH
	INT 21H
	RET
SALTO ENDP


	
	CALCULAR PROC NEAR ;FUNCION CALCULAR DETERMINANTE DE MATRIZ (3X3)
		MOV AL, MATRIZ2[8];[2][2]
		MOV AH, MATRIZ2[4];[1][1]
		IMUL AH
		MOV BX, AX
		MOV AL, MATRIZ2[7];[2][1]
		MOV AH, MATRIZ2[5];[1][2]
		IMUL AH
		MOV CX, AX 	
		SUB BX, CX
		MOV AL, MATRIZ2[0];[0][0]
		IMUL BX
		PUSH AX
		
		MOV AL, MATRIZ2[3];[1][0]
		MOV AH, MATRIZ2[8];[2][2]
		IMUL AH
		MOV BX, AX
		MOV AL, MATRIZ2[5];[1][2]
		MOV AH, MATRIZ2[6];[2][0]
		IMUL AH
		MOV CX, AX 	
		SUB BX, CX
		MOV AL, MATRIZ2[1];[0][1]
		IMUL BX
		PUSH AX
		
		MOV AL, MATRIZ2[3];[1][0]
		MOV AH, MATRIZ2[7];[2][1]
		IMUL AH
		MOV BX, AX
		MOV AL, MATRIZ2[6];[2][0]
		MOV AH, MATRIZ2[4];[1][1]
		IMUL AH
		MOV CX, AX 	
		SUB BX, CX
		MOV AL, MATRIZ2[2];[0][2]
		IMUL BX
		PUSH AX
		
		POP CX
		POP BX
		POP AX
		SUB AX, BX 
		ADD CX, AX
		RET
	;FUNCION ACABA
	CALCULAR ENDP
	
INICIO ENDP
CODE ENDS 
END INICIO 
